Утилита наполнения файла для БД на основе данных из LMS.

1. Начало работы

Необходимо установить python3 и модуль openpyxl:
`python3 -m pip install openpyxl`

2. Подготовка данных

Скрипт обрабатывает все .xlsx файлы, расположенные в каталогах edx, moodle, urfu.
На выходе получается файл export.xlsx, расположенный в текущем каталоге.

В каталогах edx, moodle, urfu расположены .xlsx-файлы, выгруженные из соответствующих LMS.

3. Схема работы наполнения данных

Рассмотрим структуру данных, выгруженную из edx или urfu.
xlsx-файлы содержат следующие колонки:

id
email
username
full_name
second_name
grade
T1
T2
...
T avg
...
Cohort Name
Enrollment Track
Verification Status
Certificate Eligible
Certificate Delivered
Certificate Type

Из представленных данных можно получить следующую информацию:
- идентификатор пользователя в курсе (id)
- email студента (email)
- логин студента (username)
- имя, фамилия, отчество студента (full_name, second_name)
- текущая успеваемость (grade)
- список заданий
- балл за выполнение каждого задания (Ti)

Чтобы данную информацию преобразовать в требуемый нам вид, нужно решить следующие подзадачи:
- из полей full_name и second_name получить фамилию, имя и отчество
- автоматически получить только колонки, относящиеся к заданиям (колонку со средним можно
  игнорировать)
- преобразовать данные

Также возникла небольшая сложность, свзанная с тем, что названия колонок иногда немного
различаются. Проблему решили добавлением разных вариантов написания и автоматическим выбором
более подходящего.
  
С первой подзадачей особых проблем не возникает, достаточно разбить строки по пробелам и
взять нужное число частей в нужно м порядке.

С второй подзадачей всё сложнее: нет информации о том, какие колонки соотвествуют колонкам с
оценками за задания. Предложено следующее решение. Отфильтруем колонки, расположенные в начале
и в конце по названиям, которые можно интерпретировать: id, email, Cohort Name и т.д. В итоге
останутся колонки, расположенные в середине — они как раз содержат оценки. Среди них осталось
отфильтровать те, содержащие подстроку « avg », т.к. они могут быть вычислены автоматически.

Следующим шагом эти данные необходимо преобразовать в набор записей в export.xlsx.
Преобразование выполняем следующим образом. Каждую запись в таблице берём столько раз, сколько
содержит колонок с оценками, в каждой копии оставляем лишь одну оценку. Далее приписываем
уникальные идентификаторы к взятой записи и добавляем на нужные листы таблицы export.xlsx.

Наполнение в итоге окажется таким (указаны поля, в которые попадает какая-либо информация):
Участник обучения (ИД_Участ)
Опросник студента подход 2 (email, Фамилия, Имя, Отчество)
Участн-Курс-Дисциплина (ИД_Участн_Дисц_Курс, ИД_Участ, ИД_Дисц_платформы, Логин, ид_пользоват_в курсе)
Результаты обучения на курсе (ИД_Результат, ИД_Участн_Дисц_Курс, Балл за текущую)
Текущая успеваемость (ИД_Мероприятия, ИД_Результат, Балл за мероприятие)

Наложенные названия исходных полей будут выглядеть так:
Участник обучения (ИД_Участ)
Опросник студента подход 2 (email, full_name, second_name)
Участн-Курс-Дисциплина (ИД_Участн_Дисц_Курс, ИД_Участ, ИД_Дисц_платформы, username, id)
Результаты обучения на курсе (ИД_Результат, ИД_Участн_Дисц_Курс, grade)
Текущая успеваемость (ИД_Мероприятия, ИД_Результат, Ti)


Теперь рассмотрим структуру данных, выгруженную из moodle.
xlsx-файлы содержат следующие колонки:

Surname
First name
Institution
ID number
Department
Email address
State
Started on
Completed
Time taken
Grade /10.0
Q. 1 /3.33
...

Из представленных данных можно получить следующую информацию:
- идентификатор пользователя в курсе (ID number)
- email студента (Email address)
- имя, фамилия, отчество студента (First name, Surname)
- текущая успеваемость (Grade)
- время старта и окончания задания (Started on, Completed)
- список заданий
- балл за выполнение каждого задания (Q i)

С предобработкой данных из moodle ситуация сложнее.
Во-1, названия колонок имеют больше вариантов, чем в edx; во-2, нужно использовать другие эвристики
для получения списка заданий; в-3, баллы за задания ненормированны и это необходимо сделать.

Проблема с большим количеством вариантов была решена аналогичным образом: составлен список возможных
наименований колонок и выбирается наилучшее соответствие.

Получение списка заданий реализовано следующим образом. Аналогичным образом фильтруем колонки, не имеющие
отношения к заданиям, далее анализируем текст в колонках. Первым делом отрезаем информацию о нормировании
(имеет заданный формат: «/что-то») и комментарии (указаны в скобках). После этого используем результаты
обработки как названия заданий.

Следующим шагом нужно выполнить нормирование данных в колонках с оценками заданий — множитель нормирования
был получен раньше при обработке названий колонок.

Далее эти данные необходимо преобразовать в набор записей в export.xlsx.
Преобразование выполняем следующим образом. Каждую запись в таблице берём столько раз, сколько
содержит колонок с оценками, в каждой копии оставляем лишь одну оценку. Далее приписываем
уникальные идентификаторы к взятой записи и добавляем на нужные листы таблицы export.xlsx.

Наполнение в итоге окажется таким (указаны поля, в которые попадает какая-либо информация):
Участник обучения (ИД_Участ)
Опросник студента подход 2 (email, Фамилия, Имя, Отчество)
Участн-Курс-Дисциплина (ИД_Участн_Дисц_Курс, ИД_Участ, ИД_Дисц_платформы, ид_пользоват_в курсе)
Результаты обучения на курсе (ИД_Результат, ИД_Участн_Дисц_Курс, Балл за текущую)
Текущая успеваемость (ИД_Мероприятия, ИД_Результат, Время начала, Время окончания, Балл за мероприятие)

Наложенные названия исходных полей будут выглядеть так:
Участник обучения (ИД_Участ)
Опросник студента подход 2 (email, First name, Surname)
Участн-Курс-Дисциплина (ИД_Участн_Дисц_Курс, ИД_Участ, ИД_Дисц_платформы, ID number)
Результаты обучения на курсе (ИД_Результат, ИД_Участн_Дисц_Курс, Grade)
Текущая успеваемость (ИД_Мероприятия, ИД_Результат, Started on, Completed, Q i)


После того, как файлы во всех 3 каталогах обработаны соответствующим образом, сохраняем получившийся export.xlsx.
